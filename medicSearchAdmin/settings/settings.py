"""
Django settings for medicSearchAdmin project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vqukrn(g0uujbj9&1(517iep_&b_%1+_=a9+)#k0mmz)3s-*vx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'medicSearch',
    'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'medicSearchAdmin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'medicSearchAdmin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# arquivos sendo usados em cada arquivo desta página
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
from pathlib import Path
# Adicione a linha a seguir no topo do arquivo após a importação da lib pathlib
import os
STATIC_URL = '/static/'
# Adicione apenas a linha abaixo
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# adicionado para conf de adicionar imagem
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_URL = '/logout'
LOGOUT_REDIRECT_URL = '/login'


AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]

SOCIAL_AUTH_FACEBOOK_KEY = "516125816557898" 
SOCIAL_AUTH_FACEBOOK_SECRET = "d3cedcece9c8208807747214e33c79fe"

# contém uma lista de permissões para acessar as propriedades de dados que nosso aplicativo requer.
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'user_link'] 

# possui uma chave fields em que o valor é uma lista de atributos que devem ser retornados pelo Facebook 
# quando o usuário tiver efetuado login com êxito. Os valores dependem de SOCIAL_AUTH_FACEBOOK_SCOPE .
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = { 
    'fields': 'id, name, email, picture.type(large), link'
}

# precisamos especificá-lo para armazenar os dados adicionais que solicitamos ao banco de dados.
SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [ 
    ('name', 'name'),
    ('email', 'email'),
    ('picture', 'picture'),
    ('link', 'profile_url'),
]


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '192932203006-j3d0e4pv53mljnkqqd1dqfbah4a0ojfr.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'


# recuperar senha pelo email
# Campo que diz se será usada a criptografia TLS ou não no envio
EMAIL_USE_TLS = True
# host do seu provedor de e-mail, geralmente também é informado na documentação do provedor de seu e-mail.
EMAIL_HOST = 'smtp.gmail.com'
# e-mail que será usado para fazer o envio dos e-mails.
EMAIL_HOST_USER = 'teste@gmail.com'
# senha
EMAIL_HOST_PASSWORD = 'teste123'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# campo que informa se será usada a criptografia SSL no envio.
EMAIL_USE_SSL = False

import django_heroku
django_heroku.settings(locals())